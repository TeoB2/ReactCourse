{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kaffeina\\\\Desktop\\\\ReactCourse-main\\\\FoodOrderApp\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updateItems = state.items.concat(action.item);\n    const totalUpdateAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updateItems,\n      totalAmount: totalUpdateAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemToCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemToCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 17\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/Kaffeina/Desktop/ReactCourse-main/FoodOrderApp/src/store/CartProvider.js"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updateItems","concat","item","totalUpdateAmount","price","amount","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemToCartHandler","id","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAE,EADc;AAErBC,EAAAA,WAAW,EAAE;AAFQ,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,MAAGA,MAAM,CAACC,IAAP,KAAgB,KAAnB,EACA;AACI,UAAMC,WAAW,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAApB;AACA,UAAMC,iBAAiB,GAAGN,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYE,KAAZ,GAAoBN,MAAM,CAACI,IAAP,CAAYG,MAA9E;AAEA,WAAO;AACHX,MAAAA,KAAK,EAAEM,WADJ;AAEHL,MAAAA,WAAW,EAAEQ;AAFV,KAAP;AAIH;;AAED,SAAOV,gBAAP;AACH,CAbD;;AAeA,MAAMa,YAAY,GAAGC,KAAK,IAAI;AAAA;;AAC1B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkClB,UAAU,CAACK,WAAD,EAAcH,gBAAd,CAAlD;;AAEA,QAAMiB,oBAAoB,GAAGR,IAAI,IAAI;AACjCO,IAAAA,kBAAkB,CAAC;AAACV,MAAAA,IAAI,EAAE,KAAP;AAAcG,MAAAA,IAAI,EAAEA;AAApB,KAAD,CAAlB;AACH,GAFD;;AAIA,QAAMS,uBAAuB,GAAGC,EAAE,IAAI;AAClCH,IAAAA,kBAAkB,CAAC;AAACV,MAAAA,IAAI,EAAE,QAAP;AAAiBa,MAAAA,EAAE,EAAEA;AAArB,KAAD,CAAlB;AACH,GAFD;;AAKA,QAAMC,WAAW,GAAG;AAChBnB,IAAAA,KAAK,EAAEc,SAAS,CAACd,KADD;AAEhBC,IAAAA,WAAW,EAAEa,SAAS,CAACb,WAFP;AAGhBmB,IAAAA,OAAO,EAAEJ,oBAHO;AAIhBK,IAAAA,UAAU,EAAEJ;AAJI,GAApB;AAOA,sBACY,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACKN,KAAK,CAACS;AADX;AAAA;AAAA;AAAA;AAAA,UADZ;AAKH,CAxBD;;GAAMV,Y;;KAAAA,Y;AA0BN,eAAeA,YAAf","sourcesContent":["import { useReducer } from \"react\";\r\nimport CartContext from \"./cart-context\";\r\n\r\nconst defaultCartState = {\r\n    items: [],\r\n    totalAmount: 0\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n    if(action.type === \"ADD\")\r\n    {\r\n        const updateItems = state.items.concat(action.item);\r\n        const totalUpdateAmount = state.totalAmount + action.item.price * action.item.amount;\r\n\r\n        return {\r\n            items: updateItems,\r\n            totalAmount: totalUpdateAmount\r\n        };\r\n    }\r\n\r\n    return defaultCartState;\r\n};\r\n\r\nconst CartProvider = props => {\r\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\r\n\r\n    const addItemToCartHandler = item => {\r\n        dispatchCartAction({type: 'ADD', item: item});\r\n    };\r\n\r\n    const removeItemToCartHandler = id => {\r\n        dispatchCartAction({type: 'REMOVE', id: id});\r\n    };\r\n\r\n\r\n    const cartContext = {\r\n        items: cartState.items,\r\n        totalAmount: cartState.totalAmount,\r\n        addItem: addItemToCartHandler,\r\n        removeItem: removeItemToCartHandler\r\n    }\r\n\r\n    return  (\r\n                <CartContext.Provider value={cartContext}>\r\n                    {props.children}\r\n                </CartContext.Provider>\r\n            );\r\n};\r\n\r\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}