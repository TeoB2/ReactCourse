{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kaffeina\\\\Desktop\\\\ReactCourse-main\\\\FoodOrderApp\\\\src\\\\components\\\\Cart\\\\Cart.js\",\n    _s = $RefreshSig$();\n\n//import components\nimport { useContext } from \"react\";\nimport Modal from \"../UI/Modal\";\nimport CartItem from \"./CartItem\";\nimport CartContext from \"../../store/cart-context\";\nimport classes from \"./Cart.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  //get cart item\n  const cartCtx = useContext(CartContext);\n\n  const cartItemRemoveHandler = id => {};\n\n  const cartItemAddHandler = item => {\n    cartCtx.addItem({ ...item,\n      amount: 1\n    });\n  }; //cycle all cart items element\n\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes[\"cart-item\"],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      amount: item.amount,\n      price: item.price,\n      onRemove: cartItemRemoveHandler.bind(null, item.id),\n      onAdd: cartItemAddHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 33\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 25\n  }, this); //bool if cart is empty or not\n\n\n  const hasItems = cartCtx.items.length > 0; //fixed price and concatenate $\n\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`; //return a modal with all cart items element\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onHideCart: props.onHideCart,\n    children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes[\"button--alt\"],\n        onClick: props.onHideCart,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.button,\n        children: \"Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 17\n  }, this);\n}; //export component\n\n\n_s(Cart, \"5vyuBAd9ctzs1tCKQUMcCu/LGtk=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["C:/Users/Kaffeina/Desktop/ReactCourse-main/FoodOrderApp/src/components/Cart/Cart.js"],"names":["useContext","Modal","CartItem","CartContext","classes","Cart","props","cartCtx","cartItemRemoveHandler","id","cartItemAddHandler","item","addItem","amount","cartItems","items","map","name","price","bind","hasItems","length","totalAmount","toFixed","onHideCart","total","actions","button"],"mappings":";;;AAAA;AACA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;;AAEA,MAAMC,IAAI,GAAGC,KAAK,IAAI;AAAA;;AAElB;AACA,QAAMC,OAAO,GAAGP,UAAU,CAACG,WAAD,CAA1B;;AAEA,QAAMK,qBAAqB,GAAGC,EAAE,IAAI,CAAE,CAAtC;;AAEA,QAAMC,kBAAkB,GAAGC,IAAI,IAAI;AAC/BJ,IAAAA,OAAO,CAACK,OAAR,CAAgB,EAAC,GAAGD,IAAJ;AAAUE,MAAAA,MAAM,EAAE;AAAlB,KAAhB;AACH,GAFD,CAPkB,CAYlB;;;AACA,QAAMC,SAAS,gBAAK;AAAI,IAAA,SAAS,EAAEV,OAAO,CAAC,WAAD,CAAtB;AAAA,cACKG,OAAO,CAACQ,KAAR,CAAcC,GAAd,CAAkBL,IAAI,iBACnB,QAAC,QAAD;AAEI,MAAA,IAAI,EAAEA,IAAI,CAACM,IAFf;AAGI,MAAA,MAAM,EAAEN,IAAI,CAACE,MAHjB;AAII,MAAA,KAAK,EAAEF,IAAI,CAACO,KAJhB;AAKI,MAAA,QAAQ,EAAEV,qBAAqB,CAACW,IAAtB,CAA2B,IAA3B,EAAiCR,IAAI,CAACF,EAAtC,CALd;AAMI,MAAA,KAAK,EAAEC,kBAAkB,CAACS,IAAnB,CAAwB,IAAxB,EAA8BR,IAA9B;AANX,OACSA,IAAI,CAACF,EADd;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UAApB,CAbkB,CA0BlB;;;AACA,QAAMW,QAAQ,GAAGb,OAAO,CAACQ,KAAR,CAAcM,MAAd,GAAuB,CAAxC,CA3BkB,CA6BlB;;AACA,QAAMC,WAAW,GAAI,IAAGf,OAAO,CAACe,WAAR,CAAoBC,OAApB,CAA4B,CAA5B,CAA+B,EAAvD,CA9BkB,CAgClB;;AACA,sBACY,QAAC,KAAD;AAAO,IAAA,UAAU,EAAEjB,KAAK,CAACkB,UAAzB;AAAA,eACKV,SADL,eAEI;AAAK,MAAA,SAAS,EAAEV,OAAO,CAACqB,KAAxB;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAOH;AAAP;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAMI;AAAK,MAAA,SAAS,EAAElB,OAAO,CAACsB,OAAxB;AAAA,8BACI;AAAQ,QAAA,SAAS,EAAEtB,OAAO,CAAC,aAAD,CAA1B;AAA2C,QAAA,OAAO,EAAEE,KAAK,CAACkB,UAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKJ,QAAQ,iBAAI;AAAQ,QAAA,SAAS,EAAEhB,OAAO,CAACuB,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFjB;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADZ;AAaH,CA9CD,C,CAgDA;;;GAhDMtB,I;;KAAAA,I;AAiDN,eAAeA,IAAf","sourcesContent":["//import components\r\nimport { useContext } from \"react\";\r\nimport Modal from \"../UI/Modal\";\r\nimport CartItem from \"./CartItem\";\r\nimport CartContext from \"../../store/cart-context\"\r\nimport classes from \"./Cart.module.css\";\r\n\r\nconst Cart = props => {\r\n\r\n    //get cart item\r\n    const cartCtx = useContext(CartContext);\r\n\r\n    const cartItemRemoveHandler = id => {};\r\n\r\n    const cartItemAddHandler = item => {\r\n        cartCtx.addItem({...item, amount: 1});\r\n    };\r\n\r\n\r\n    //cycle all cart items element\r\n    const cartItems =   <ul className={classes[\"cart-item\"]}>\r\n                            {cartCtx.items.map(item => \r\n                                <CartItem \r\n                                    key={item.id} \r\n                                    name={item.name}\r\n                                    amount={item.amount} \r\n                                    price={item.price} \r\n                                    onRemove={cartItemRemoveHandler.bind(null, item.id)} \r\n                                    onAdd={cartItemAddHandler.bind(null, item)} \r\n                                />)\r\n                            }\r\n                        </ul>;\r\n\r\n    //bool if cart is empty or not\r\n    const hasItems = cartCtx.items.length > 0;\r\n\r\n    //fixed price and concatenate $\r\n    const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\r\n\r\n    //return a modal with all cart items element\r\n    return  (\r\n                <Modal onHideCart={props.onHideCart}>\r\n                    {cartItems}\r\n                    <div className={classes.total}>\r\n                        <span>Total Amount:</span>\r\n                        <span>{totalAmount}</span>\r\n                    </div>\r\n                    <div className={classes.actions}>\r\n                        <button className={classes[\"button--alt\"]} onClick={props.onHideCart}>Close</button>\r\n                        {hasItems && <button className={classes.button}>Order</button>}\r\n                    </div>\r\n                </Modal>\r\n            );\r\n};\r\n\r\n//export component\r\nexport default Cart;"]},"metadata":{},"sourceType":"module"}