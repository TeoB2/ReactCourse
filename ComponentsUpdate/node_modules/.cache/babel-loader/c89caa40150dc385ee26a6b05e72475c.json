{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kaffeina\\\\Desktop\\\\ReactCourse-main\\\\ComponentsUpdate\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from 'react';\nimport Button from \"./components/UI/Button/Button\";\nimport './App.css';\nimport DemoOutput from './components/Demo/DemoOutput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showParagraph, setShowParagraph] = useState(false);\n  const [allowtoggle, setAllowToggle] = useState(false);\n  const toggleParagraphHandler = useCallback(() => {\n    setShowParagraph(prevShowParagraph => !prevShowParagraph);\n    return true;\n  }, []);\n\n  const allowToggleHandler = () => {\n    setAllowToggle(true);\n    return true;\n  };\n\n  console.log(\"App running\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hi there!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DemoOutput, {\n      show: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: allowToggleHandler,\n      children: \"Allow Toggling\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: toggleParagraphHandler,\n      children: \"Toggle paragraph!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"vqq0MSSurfRrFebZkwcjaJYhxJA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Kaffeina/Desktop/ReactCourse-main/ComponentsUpdate/src/App.js"],"names":["React","useCallback","useState","Button","DemoOutput","App","showParagraph","setShowParagraph","allowtoggle","setAllowToggle","toggleParagraphHandler","prevShowParagraph","allowToggleHandler","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AAEA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCL,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,KAAD,CAA9C;AAEA,QAAMQ,sBAAsB,GAAGT,WAAW,CAAC,MAAM;AAE/CM,IAAAA,gBAAgB,CAACI,iBAAiB,IAAI,CAACA,iBAAvB,CAAhB;AAEA,WAAO,IAAP;AACD,GALyC,EAKvC,EALuC,CAA1C;;AAOA,QAAMC,kBAAkB,GAAG,MAAM;AAE/BH,IAAAA,cAAc,CAAC,IAAD,CAAd;AAEA,WAAO,IAAP;AACD,GALD;;AAOAI,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD;AAAY,MAAA,IAAI,EAAE;AAAlB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEF,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEF,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GA7BQL,G;;KAAAA,G;AA+BT,eAAeA,GAAf","sourcesContent":["import React, { useCallback, useState } from 'react';\nimport Button from \"./components/UI/Button/Button\";\n\nimport './App.css';\nimport DemoOutput from './components/Demo/DemoOutput';\n\nfunction App() {\n\n  const [showParagraph, setShowParagraph] = useState(false);\n  const [allowtoggle, setAllowToggle] = useState(false);\n\n  const toggleParagraphHandler = useCallback(() => {\n\n    setShowParagraph(prevShowParagraph => !prevShowParagraph);\n\n    return true;\n  }, []);\n\n  const allowToggleHandler = () => {\n\n    setAllowToggle(true);\n\n    return true;\n  };\n\n  console.log(\"App running\");\n\n  return (\n    <div className=\"app\">\n      <h1>Hi there!</h1>\n      <DemoOutput show={false} />\n      <Button onClick={allowToggleHandler}>Allow Toggling</Button>\n      <Button onClick={toggleParagraphHandler}>Toggle paragraph!</Button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}