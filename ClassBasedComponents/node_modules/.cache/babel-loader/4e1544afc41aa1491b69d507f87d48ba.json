{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kaffeina\\\\Desktop\\\\ReactCourse-main\\\\ClassBasedComponents\\\\src\\\\components\\\\UserFinder.js\";\nimport { Fragment, useState, useEffect, Component } from 'react';\nimport UsersContext from '../store/users-context';\nimport Users from './Users';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserFinder extends Component {\n  constructor() {\n    this.state = {\n      filteredUsers: DUMMY_USERS,\n      searchTerm: ''\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      filteredUsers: DUMMY_USERS\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.searchTerm !== this.state.searchTerm) {\n      this.setState({\n        filteredUsers: DUMMY_USERS.filter(user => user.name.includes(this.state.searchTerm))\n      });\n    }\n  }\n\n  searchChangeHandler(event) {\n    this.setState({\n      searchTerm: event.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(UsersContext.Consumer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"search\",\n        onChange: this.searchChangeHandler.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Users, {\n        users: this.state.filteredUsers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n/*const UserFinder = () => {\r\n\r\n    const DUMMY_USERS = [\r\n        { id: 'u1', name: 'Max' },\r\n        { id: 'u2', name: 'Manuel' },\r\n        { id: 'u3', name: 'Julie' },\r\n      ];\r\n\r\n  const [filteredUsers, setFilteredUsers] = useState(DUMMY_USERS);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  useEffect(() => {\r\n    setFilteredUsers(\r\n      DUMMY_USERS.filter((user) => user.name.includes(searchTerm))\r\n    );\r\n  }, [searchTerm]);\r\n\r\n  const searchChangeHandler = (event) => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <input type='search' onChange={searchChangeHandler} />\r\n      <Users users={filteredUsers} />\r\n    </Fragment>\r\n  );\r\n};*/\n\n\nexport default UserFinder;","map":{"version":3,"sources":["C:/Users/Kaffeina/Desktop/ReactCourse-main/ClassBasedComponents/src/components/UserFinder.js"],"names":["Fragment","useState","useEffect","Component","UsersContext","Users","UserFinder","constructor","state","filteredUsers","DUMMY_USERS","searchTerm","componentDidMount","setState","componentDidUpdate","prevProps","prevState","filter","user","name","includes","searchChangeHandler","event","target","value","render","bind"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,QAAnB,EAA6BC,SAA7B,EAAwCC,SAAxC,QAAyD,OAAzD;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;;;AAGA,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;AAEhCI,EAAAA,WAAW,GAAG;AACT,SAAKC,KAAL,GAAa;AACTC,MAAAA,aAAa,EAAEC,WADN;AAETC,MAAAA,UAAU,EAAE;AAFH,KAAb;AAIH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,QAAL,CAAc;AAACJ,MAAAA,aAAa,EAAEC;AAAhB,KAAd;AACH;;AAEDI,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACrC,QAAGD,SAAS,CAACJ,UAAV,KAAyB,KAAKH,KAAL,CAAWG,UAAvC,EACA;AACI,WAAKE,QAAL,CAAc;AAACJ,QAAAA,aAAa,EAAEC,WAAW,CAACO,MAAZ,CAAoBC,IAAD,IAAUA,IAAI,CAACC,IAAL,CAAUC,QAAV,CAAmB,KAAKZ,KAAL,CAAWG,UAA9B,CAA7B;AAAhB,OAAd;AACH;AACJ;;AAEDU,EAAAA,mBAAmB,CAACC,KAAD,EAAQ;AACvB,SAAKT,QAAL,CAAc;AAACF,MAAAA,UAAU,EAAEW,KAAK,CAACC,MAAN,CAAaC;AAA1B,KAAd;AACH;;AAEDC,EAAAA,MAAM,GAAG;AAGL,wBACI,QAAC,QAAD;AAAA,8BACI,QAAC,YAAD,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,QAAQ,EAAE,KAAKJ,mBAAL,CAAyBK,IAAzB,CAA8B,IAA9B;AAA/B;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,KAAD;AAAO,QAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWC;AAAzB;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AAlC8B;AAqCnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeH,UAAf","sourcesContent":["import { Fragment, useState, useEffect, Component } from 'react';\r\nimport UsersContext from '../store/users-context';\r\n\r\nimport Users from './Users';\r\n\r\n\r\nclass UserFinder extends Component {\r\n   \r\n   constructor() {\r\n        this.state = {\r\n            filteredUsers: DUMMY_USERS,\r\n            searchTerm: ''\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({filteredUsers: DUMMY_USERS});\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(prevProps.searchTerm !== this.state.searchTerm)\r\n        {\r\n            this.setState({filteredUsers: DUMMY_USERS.filter((user) => user.name.includes(this.state.searchTerm))});\r\n        }        \r\n    }\r\n\r\n    searchChangeHandler(event) {\r\n        this.setState({searchTerm: event.target.value});\r\n    };\r\n\r\n    render() {\r\n        \r\n\r\n        return (\r\n            <Fragment>\r\n                <UsersContext.Consumer></UsersContext.Consumer>\r\n                <input type='search' onChange={this.searchChangeHandler.bind(this)} />\r\n                <Users users={this.state.filteredUsers} />\r\n            </Fragment>\r\n          );\r\n    }\r\n}\r\n\r\n/*const UserFinder = () => {\r\n\r\n    const DUMMY_USERS = [\r\n        { id: 'u1', name: 'Max' },\r\n        { id: 'u2', name: 'Manuel' },\r\n        { id: 'u3', name: 'Julie' },\r\n      ];\r\n\r\n  const [filteredUsers, setFilteredUsers] = useState(DUMMY_USERS);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  useEffect(() => {\r\n    setFilteredUsers(\r\n      DUMMY_USERS.filter((user) => user.name.includes(searchTerm))\r\n    );\r\n  }, [searchTerm]);\r\n\r\n  const searchChangeHandler = (event) => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <input type='search' onChange={searchChangeHandler} />\r\n      <Users users={filteredUsers} />\r\n    </Fragment>\r\n  );\r\n};*/\r\n\r\nexport default UserFinder;"]},"metadata":{},"sourceType":"module"}