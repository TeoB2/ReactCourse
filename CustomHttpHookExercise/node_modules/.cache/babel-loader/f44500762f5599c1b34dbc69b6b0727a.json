{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kaffeina\\\\Desktop\\\\ReactCourse-main\\\\CustomHttpHookExercise\\\\src\\\\components\\\\NewTask\\\\NewTask.js\",\n    _s = $RefreshSig$();\n\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\nimport useHttp from '../../hooks/use-http';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTask = props => {\n  _s();\n\n  const httpData = useHttp();\n  const {\n    isLoading,\n    error,\n    sendRequest: sendTaskRequest\n  } = httpData;\n\n  const enterTaskHandler = async taskText => {\n    const createTask = taskData => {\n      const generatedId = taskData.name; // firebase-specific => \"name\" contains generated id\n\n      const createdTask = {\n        id: generatedId,\n        text: taskText\n      };\n      props.onAddTask(createdTask);\n    };\n\n    sendTaskRequest({\n      url: 'https://react-course-http-request-default-rtdb.europe-west1.firebasedatabase.app/task.json',\n      method: 'POST',\n      body: {\n        text: taskText\n      },\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }, createTask);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onEnterTask: enterTaskHandler,\n      loading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewTask, \"9k1DoXb6hmM8QorsMPrV1580lAY=\", false, function () {\n  return [useHttp];\n});\n\n_c = NewTask;\nexport default NewTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"sources":["C:/Users/Kaffeina/Desktop/ReactCourse-main/CustomHttpHookExercise/src/components/NewTask/NewTask.js"],"names":["Section","TaskForm","useHttp","NewTask","props","httpData","isLoading","error","sendRequest","sendTaskRequest","enterTaskHandler","taskText","createTask","taskData","generatedId","name","createdTask","id","text","onAddTask","url","method","body","headers"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,eAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AAEzB,QAAMC,QAAQ,GAAGH,OAAO,EAAxB;AAEA,QAAM;AAAEI,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,WAAW,EAAEC;AAAjC,MAAqDJ,QAA3D;;AAKA,QAAMK,gBAAgB,GAAG,MAAOC,QAAP,IAAoB;AAE3C,UAAMC,UAAU,GAAIC,QAAD,IAAc;AAC/B,YAAMC,WAAW,GAAGD,QAAQ,CAACE,IAA7B,CAD+B,CACI;;AACnC,YAAMC,WAAW,GAAG;AAAEC,QAAAA,EAAE,EAAEH,WAAN;AAAmBI,QAAAA,IAAI,EAAEP;AAAzB,OAApB;AAEAP,MAAAA,KAAK,CAACe,SAAN,CAAgBH,WAAhB;AACH,KALC;;AAOAP,IAAAA,eAAe,CAAC;AACdW,MAAAA,GAAG,EAAE,4FADS;AAEdC,MAAAA,MAAM,EAAE,MAFM;AAGdC,MAAAA,IAAI,EAAE;AAAEJ,QAAAA,IAAI,EAAEP;AAAR,OAHQ;AAIdY,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB;AAJK,KAAD,EAKZX,UALY,CAAf;AAMD,GAfD;;AAiBA,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,WAAW,EAAEF,gBAAvB;AAAyC,MAAA,OAAO,EAAEJ;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGC,KAAK,iBAAI;AAAA,gBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAhCD;;GAAMJ,O;UAEaD,O;;;KAFbC,O;AAkCN,eAAeA,OAAf","sourcesContent":["import Section from '../UI/Section';\nimport TaskForm from './TaskForm';\nimport useHttp from '../../hooks/use-http';\n\nconst NewTask = (props) => {\n\n  const httpData = useHttp();\n\n  const { isLoading, error, sendRequest: sendTaskRequest } = httpData;\n\n\n\n\n  const enterTaskHandler = async (taskText) => {\n\n    const createTask = (taskData) => {\n      const generatedId = taskData.name; // firebase-specific => \"name\" contains generated id\n      const createdTask = { id: generatedId, text: taskText };\n\n      props.onAddTask(createdTask);\n  };\n\n    sendTaskRequest({\n      url: 'https://react-course-http-request-default-rtdb.europe-west1.firebasedatabase.app/task.json', \n      method: 'POST', \n      body: { text: taskText }, \n      headers: {'Content-Type': 'application/json',}\n    }, createTask);\n  };\n\n  return (\n    <Section>\n      <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  );\n};\n\nexport default NewTask;\n"]},"metadata":{},"sourceType":"module"}