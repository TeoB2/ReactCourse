{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kaffeina\\\\Desktop\\\\ReactCourse-main\\\\CustomHttpHookExercise\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport Tasks from './components/Tasks/Tasks';\nimport NewTask from './components/NewTask/NewTask';\nimport useHttp from './hooks/use-http';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  const trasformTask = useCallback(taskObj => {\n    const loadedTasks = [];\n\n    for (const taskKey in taskObj) {\n      loadedTasks.push({\n        id: taskKey,\n        text: taskObj[taskKey].text\n      });\n    }\n\n    setTasks(loadedTasks);\n  });\n  const httpData = useHttp();\n  const {\n    isLoading,\n    error,\n    sendRequest: fetchTasks\n  } = httpData;\n  useEffect(() => {\n    fetchTasks({\n      url: 'https://react-course-http-request-default-rtdb.europe-west1.firebasedatabase.app/task.json'\n    }, trasformTask);\n  }, []);\n\n  const taskAddHandler = task => {\n    setTasks(prevTasks => prevTasks.concat(task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NewTask, {\n      onAddTask: taskAddHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n      items: tasks,\n      loading: isLoading,\n      error: error,\n      onFetch: fetchTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"fXRNQHI1zxzzn+JNXe8ZrfT/M3Y=\", false, function () {\n  return [useHttp];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Kaffeina/Desktop/ReactCourse-main/CustomHttpHookExercise/src/App.js"],"names":["React","useEffect","useState","useCallback","Tasks","NewTask","useHttp","App","tasks","setTasks","trasformTask","taskObj","loadedTasks","taskKey","push","id","text","httpData","isLoading","error","sendRequest","fetchTasks","url","taskAddHandler","task","prevTasks","concat"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,WAArC,QAAwD,OAAxD;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,OAAP,MAAoB,kBAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMQ,YAAY,GAAGP,WAAW,CAACQ,OAAO,IAAI;AAC1C,UAAMC,WAAW,GAAG,EAApB;;AAEA,SAAK,MAAMC,OAAX,IAAsBF,OAAtB,EAA+B;AAC7BC,MAAAA,WAAW,CAACE,IAAZ,CAAiB;AAAEC,QAAAA,EAAE,EAAEF,OAAN;AAAeG,QAAAA,IAAI,EAAEL,OAAO,CAACE,OAAD,CAAP,CAAiBG;AAAtC,OAAjB;AACD;;AAEDP,IAAAA,QAAQ,CAACG,WAAD,CAAR;AACD,GAR+B,CAAhC;AAUA,QAAMK,QAAQ,GAAGX,OAAO,EAAxB;AAEA,QAAM;AAAEY,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,WAAW,EAAEC;AAAjC,MAAgDJ,QAAtD;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,UAAU,CAAC;AAACC,MAAAA,GAAG,EAAE;AAAN,KAAD,EAAsGZ,YAAtG,CAAV;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMa,cAAc,GAAIC,IAAD,IAAU;AAC/Bf,IAAAA,QAAQ,CAAEgB,SAAD,IAAeA,SAAS,CAACC,MAAV,CAAiBF,IAAjB,CAAhB,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,SAAS,EAAED;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AACE,MAAA,KAAK,EAAEf,KADT;AAEE,MAAA,OAAO,EAAEU,SAFX;AAGE,MAAA,KAAK,EAAEC,KAHT;AAIE,MAAA,OAAO,EAAEE;AAJX;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GArCQd,G;UAcUD,O;;;KAdVC,G;AAuCT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\n\nimport Tasks from './components/Tasks/Tasks';\nimport NewTask from './components/NewTask/NewTask';\nimport useHttp from './hooks/use-http';\n\nfunction App() {\n  \n  const [tasks, setTasks] = useState([]);\n\n  const trasformTask = useCallback(taskObj => {\n    const loadedTasks = [];\n\n    for (const taskKey in taskObj) {\n      loadedTasks.push({ id: taskKey, text: taskObj[taskKey].text });\n    }\n\n    setTasks(loadedTasks);\n  });\n\n  const httpData = useHttp();\n\n  const { isLoading, error, sendRequest: fetchTasks } = httpData;\n\n  useEffect(() => {\n    fetchTasks({url: 'https://react-course-http-request-default-rtdb.europe-west1.firebasedatabase.app/task.json'}, trasformTask);\n  }, []);\n\n  const taskAddHandler = (task) => {\n    setTasks((prevTasks) => prevTasks.concat(task));\n  };\n\n  return (\n    <React.Fragment>\n      <NewTask onAddTask={taskAddHandler} />\n      <Tasks\n        items={tasks}\n        loading={isLoading}\n        error={error}\n        onFetch={fetchTasks}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}