{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kaffeina\\\\Desktop\\\\ReactCourse-main\\\\CustomHttpHookExercise\\\\src\\\\components\\\\NewTask\\\\NewTask.js\",\n    _s = $RefreshSig$();\n\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\nimport useHttp from '../../hooks/use-http';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTask = props => {\n  _s();\n\n  const httpData = useHttp();\n  const {\n    isLoading,\n    error,\n    sendRequest: sendTaskRequest\n  } = httpData;\n\n  const createTask = taskData => {};\n\n  const enterTaskHandler = async taskText => {\n    sendTaskRequest({\n      url: 'https://react-course-http-request-default-rtdb.europe-west1.firebasedatabase.app/task.json',\n      method: 'POST',\n      body: {\n        text: taskText\n      },\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }, createTask);\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch('https://react-course-http-request-default-rtdb.europe-west1.firebasedatabase.app/task.json', {\n        method: 'POST',\n        body: JSON.stringify({\n          text: taskText\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n\n      const data = await response.json();\n      const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n\n      const createdTask = {\n        id: generatedId,\n        text: taskText\n      };\n      props.onAddTask(createdTask);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n\n    setIsLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onEnterTask: enterTaskHandler,\n      loading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewTask, \"9k1DoXb6hmM8QorsMPrV1580lAY=\", false, function () {\n  return [useHttp];\n});\n\n_c = NewTask;\nexport default NewTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"sources":["C:/Users/Kaffeina/Desktop/ReactCourse-main/CustomHttpHookExercise/src/components/NewTask/NewTask.js"],"names":["Section","TaskForm","useHttp","NewTask","props","httpData","isLoading","error","sendRequest","sendTaskRequest","createTask","taskData","enterTaskHandler","taskText","url","method","body","text","headers","setIsLoading","setError","response","fetch","JSON","stringify","ok","Error","data","json","generatedId","name","createdTask","id","onAddTask","err","message"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,eAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AAEzB,QAAMC,QAAQ,GAAGH,OAAO,EAAxB;AAEA,QAAM;AAAEI,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,WAAW,EAAEC;AAAjC,MAAqDJ,QAA3D;;AAEA,QAAMK,UAAU,GAAIC,QAAD,IAAc,CAAE,CAAnC;;AAGA,QAAMC,gBAAgB,GAAG,MAAOC,QAAP,IAAoB;AAE3CJ,IAAAA,eAAe,CAAC;AACdK,MAAAA,GAAG,EAAE,4FADS;AAEdC,MAAAA,MAAM,EAAE,MAFM;AAGdC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,IAAI,EAAEJ;AAAR,OAHQ;AAIdK,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB;AAJK,KAAD,EAKZR,UALY,CAAf;AAOAS,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAC,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,4FAD0B,EAE1B;AACEP,QAAAA,MAAM,EAAE,MADV;AAEEC,QAAAA,IAAI,EAAEO,IAAI,CAACC,SAAL,CAAe;AAAEP,UAAAA,IAAI,EAAEJ;AAAR,SAAf,CAFR;AAGEK,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAHX,OAF0B,CAA5B;;AAWA,UAAI,CAACG,QAAQ,CAACI,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACD;;AAED,YAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAT,EAAnB;AAEA,YAAMC,WAAW,GAAGF,IAAI,CAACG,IAAzB,CAlBE,CAkB6B;;AAC/B,YAAMC,WAAW,GAAG;AAAEC,QAAAA,EAAE,EAAEH,WAAN;AAAmBZ,QAAAA,IAAI,EAAEJ;AAAzB,OAApB;AAEAT,MAAAA,KAAK,CAAC6B,SAAN,CAAgBF,WAAhB;AACD,KAtBD,CAsBE,OAAOG,GAAP,EAAY;AACZd,MAAAA,QAAQ,CAACc,GAAG,CAACC,OAAJ,IAAe,uBAAhB,CAAR;AACD;;AACDhB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GArCD;;AAuCA,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,WAAW,EAAEP,gBAAvB;AAAyC,MAAA,OAAO,EAAEN;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGC,KAAK,iBAAI;AAAA,gBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAtDD;;GAAMJ,O;UAEaD,O;;;KAFbC,O;AAwDN,eAAeA,OAAf","sourcesContent":["import Section from '../UI/Section';\nimport TaskForm from './TaskForm';\nimport useHttp from '../../hooks/use-http';\n\nconst NewTask = (props) => {\n\n  const httpData = useHttp();\n\n  const { isLoading, error, sendRequest: sendTaskRequest } = httpData;\n\n  const createTask = (taskData) => {};\n\n\n  const enterTaskHandler = async (taskText) => {\n\n    sendTaskRequest({\n      url: 'https://react-course-http-request-default-rtdb.europe-west1.firebasedatabase.app/task.json', \n      method: 'POST', \n      body: { text: taskText }, \n      headers: {'Content-Type': 'application/json',}\n    }, createTask);\n\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\n        'https://react-course-http-request-default-rtdb.europe-west1.firebasedatabase.app/task.json',\n        {\n          method: 'POST',\n          body: JSON.stringify({ text: taskText }),\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n\n      const data = await response.json();\n\n      const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n      const createdTask = { id: generatedId, text: taskText };\n\n      props.onAddTask(createdTask);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n    setIsLoading(false);\n  };\n\n  return (\n    <Section>\n      <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  );\n};\n\nexport default NewTask;\n"]},"metadata":{},"sourceType":"module"}