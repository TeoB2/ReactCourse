{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nconst UseHttp = (requestConfig, applyData) => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const sendRequest = async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch( //'https://react-course-http-request-default-rtdb.europe-west1.firebasedatabase.app/task.json'\n      requestConfig.url, {\n        method: requestConfig.method,\n        headers: requestConfig.headers,\n        body: JSON.stringify(requestConfig.body)\n      });\n\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n\n      const data = await response.json();\n      applyData(data);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n\n    setIsLoading(false);\n  };\n\n  return {\n    isLoading: isLoading,\n    error: error,\n    sendRequest: sendRequest\n  };\n};\n\n_s(UseHttp, \"vj++RuHna9NxFPGCY0p/mi1GZNM=\");\n\n_c = UseHttp;\nexport default UseHttp;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseHttp\");","map":{"version":3,"sources":["C:/Users/Kaffeina/Desktop/ReactCourse-main/CustomHttpHookExercise/src/hooks/use-http.js"],"names":["useState","UseHttp","requestConfig","applyData","isLoading","setIsLoading","error","setError","sendRequest","response","fetch","url","method","headers","body","JSON","stringify","ok","Error","data","json","err","message"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,OAAO,GAAG,CAACC,aAAD,EAAgBC,SAAhB,KAA8B;AAAA;;AAC1C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMQ,WAAW,GAAG,YAAY;AAC9BH,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAI;AACF,YAAME,QAAQ,GAAG,MAAMC,KAAK,EAC1B;AACAR,MAAAA,aAAa,CAACS,GAFY,EAEP;AACfC,QAAAA,MAAM,EAAEV,aAAa,CAACU,MADP;AAEfC,QAAAA,OAAO,EAAEX,aAAa,CAACW,OAFR;AAGfC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAed,aAAa,CAACY,IAA7B;AAHS,OAFO,CAA5B;;AASA,UAAI,CAACL,QAAQ,CAACQ,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACD;;AAED,YAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAT,EAAnB;AAEAjB,MAAAA,SAAS,CAACgB,IAAD,CAAT;AACD,KAjBD,CAiBE,OAAOE,GAAP,EAAY;AACZd,MAAAA,QAAQ,CAACc,GAAG,CAACC,OAAJ,IAAe,uBAAhB,CAAR;AACD;;AACDjB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAxBD;;AA0BA,SAAO;AACHD,IAAAA,SAAS,EAAEA,SADR;AAEHE,IAAAA,KAAK,EAAEA,KAFJ;AAGHE,IAAAA,WAAW,EAAEA;AAHV,GAAP;AAKH,CAnCD;;GAAMP,O;;KAAAA,O;AAqCN,eAAeA,OAAf","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst UseHttp = (requestConfig, applyData) => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n  \r\n    const sendRequest = async () => {\r\n      setIsLoading(true);\r\n      setError(null);\r\n      try {\r\n        const response = await fetch(\r\n          //'https://react-course-http-request-default-rtdb.europe-west1.firebasedatabase.app/task.json'\r\n          requestConfig.url, {\r\n              method: requestConfig.method,\r\n              headers: requestConfig.headers,\r\n              body: JSON.stringify(requestConfig.body)\r\n          }\r\n        );\r\n  \r\n        if (!response.ok) {\r\n          throw new Error('Request failed!');\r\n        }\r\n  \r\n        const data = await response.json();\r\n  \r\n        applyData(data);\r\n      } catch (err) {\r\n        setError(err.message || 'Something went wrong!');\r\n      }\r\n      setIsLoading(false);\r\n    };\r\n\r\n    return {\r\n        isLoading: isLoading,\r\n        error: error,\r\n        sendRequest: sendRequest\r\n    }\r\n};\r\n\r\nexport default UseHttp;"]},"metadata":{},"sourceType":"module"}