{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kaffeina\\\\Desktop\\\\ReactCourse-main\\\\UseReducerExercise\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport AuthContext from './store/auth-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //const ctx = useContext(AuthContext);\n  const [isLoggedIn, setIsLogged] = useState(false);\n  useEffect(() => {\n    const storedUserLoggedInInformation = localStorage.getItem('isLoggedIn');\n\n    if (storedUserLoggedInInformation === '1') {\n      setIsLogged(true);\n    }\n  }, []);\n\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    setIsLogged(false);\n  };\n\n  const loginHandler = () => {\n    localStorage.setItem('isLoggedIn', '1');\n    setIsLogged(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MainHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"/kABH9vgqfinEYLBR4nol8ruFHA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Kaffeina/Desktop/ReactCourse-main/UseReducerExercise/src/App.js"],"names":["React","useContext","Login","Home","MainHeader","AuthContext","App","isLoggedIn","setIsLogged","useState","useEffect","storedUserLoggedInInformation","localStorage","getItem","logoutHandler","removeItem","loginHandler","setItem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb;AAEA,QAAM,CAACC,UAAD,EAAaC,WAAb,IAA4BC,QAAQ,CAAC,KAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMC,6BAA6B,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAtC;;AAEA,QAAIF,6BAA6B,KAAK,GAAtC,EAA2C;AACvCH,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH;AACF,GANM,EAMJ,EANI,CAAT;;AAQA,QAAMM,aAAa,GAAG,MAAM;AACxBF,IAAAA,YAAY,CAACG,UAAb,CAAwB,YAAxB;AACAP,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH,GAHD;;AAKA,QAAMQ,YAAY,GAAG,MAAM;AACvBJ,IAAAA,YAAY,CAACK,OAAb,CAAqB,YAArB,EAAmC,GAAnC;AACAT,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GAHD;;AAKA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,iBACG,CAACD,UAAD,iBAAe,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cADlB,EAEGA,UAAU,iBAAI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAFjB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAjCQD,G;;KAAAA,G;AAmCT,eAAeA,GAAf","sourcesContent":["import React, { useContext } from 'react';\n\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport AuthContext from './store/auth-context';\n\nfunction App() {\n\n  //const ctx = useContext(AuthContext);\n\n  const [isLoggedIn, setIsLogged] = useState(false);\n\n  useEffect(() => {\n      const storedUserLoggedInInformation = localStorage.getItem('isLoggedIn');\n  \n      if (storedUserLoggedInInformation === '1') {\n          setIsLogged(true);\n      }\n    }, []);\n\n  const logoutHandler = () => {\n      localStorage.removeItem('isLoggedIn');\n      setIsLogged(false);\n  };\n\n  const loginHandler = () => {\n      localStorage.setItem('isLoggedIn', '1');\n      setIsLogged(true);\n  };\n\n  return (\n    <React.Fragment>\n      <MainHeader />\n      <main>\n        {!isLoggedIn && <Login />}\n        {isLoggedIn && <Home />}\n      </main>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}