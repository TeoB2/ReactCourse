{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kaffeina\\\\Desktop\\\\ReactCourse-main\\\\src\\\\components\\\\Expenses.js\";\n//Import components and css\nimport Card from \"./Card\";\nimport ExpenseDate from \"./ExpenseDate\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"../css/Expenses.css\"; //Expenses component in arrow method\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = props => {\n  let expenses = props.expenses;\n  let yearFilter = props.yearFilterSelected; //Check if there are a year filter\n\n  if (yearFilter.length > 0) {\n    expenses = props.expenses.filter(expense => {\n      return expense.date.getFullYear().toString() === yearFilter;\n    });\n  } //Cycle all expenses\n\n\n  if (typeof expenses != \"undefined\" || expenses.length > 0) {\n    let expense = expenses.map(expense => /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpenseDate, {\n        date: expense.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 90\n      }, this), /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        title: expense.title,\n        amount: expense.amount,\n        id: expense.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 124\n      }, this)]\n    }, expense.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 44\n    }, this));\n  } else {\n    let expense = /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"expenses\",\n      children: \"No expenses found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 19\n    }, this);\n  } //Returns Card component container with inside ExpenseDate and ExprenseItem components. \n  //At ExpenseDate and ExprenseItem components pass date, title and amount through props.expenses\n  //which I previously passed from the App component\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [expense.length <= 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"expenses\",\n      children: \"No expenses found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 32\n    }, this), expense.length > 0 && expense]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}; //Export component\n\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["C:/Users/Kaffeina/Desktop/ReactCourse-main/src/components/Expenses.js"],"names":["Card","ExpenseDate","ExpenseItem","Expenses","props","expenses","yearFilter","yearFilterSelected","length","filter","expense","date","getFullYear","toString","map","title","amount","id"],"mappings":";AAAA;AACA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,qBAAP,C,CAEA;;;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IACjB;AACE,MAAIC,QAAQ,GAAGD,KAAK,CAACC,QAArB;AACA,MAAIC,UAAU,GAAGF,KAAK,CAACG,kBAAvB,CAFF,CAIE;;AACA,MAAGD,UAAU,CAACE,MAAX,GAAoB,CAAvB,EACA;AACEH,IAAAA,QAAQ,GAAGD,KAAK,CAACC,QAAN,CAAeI,MAAf,CAAsBC,OAAO,IAAI;AAC1C,aAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CP,UAAjD;AACD,KAFU,CAAX;AAGD,GAVH,CAYE;;;AACA,MAAG,OAAOD,QAAP,IAAmB,WAAnB,IAAkCA,QAAQ,CAACG,MAAT,GAAkB,CAAvD,EACA;AACE,QAAIE,OAAO,GAAGL,QAAQ,CAACS,GAAT,CAAaJ,OAAO,iBAAK,QAAC,IAAD;AAAM,MAAA,SAAS,EAAE,UAAjB;AAAA,8BAA8C,QAAC,WAAD;AAAa,QAAA,IAAI,EAAEA,OAAO,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAA9C,eAAgF,QAAC,WAAD;AAAa,QAAA,KAAK,EAAED,OAAO,CAACK,KAA5B;AAAmC,QAAA,MAAM,EAAEL,OAAO,CAACM,MAAnD;AAA2D,QAAA,EAAE,EAAEN,OAAO,CAACO;AAAvE;AAAA;AAAA;AAAA;AAAA,cAAhF;AAAA,OAAkCP,OAAO,CAACO,EAA1C;AAAA;AAAA;AAAA;AAAA,YAAzB,CAAd;AACD,GAHD,MAKA;AACE,QAAIP,OAAO,gBAAG;AAAG,MAAA,SAAS,EAAE,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAd;AACD,GApBH,CAuBE;AACA;AACA;;;AACA,sBACE;AAAA,eACGA,OAAO,CAACF,MAAR,IAAkB,CAAlB,iBAAwB;AAAG,MAAA,SAAS,EAAE,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAD3B,EAEGE,OAAO,CAACF,MAAR,GAAiB,CAAjB,IAAuBE,OAF1B;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAlCD,C,CAoCA;;;KApCMP,Q;AAqCN,eAAeA,QAAf","sourcesContent":["//Import components and css\r\nimport Card from \"./Card\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport \"../css/Expenses.css\";\r\n\r\n//Expenses component in arrow method\r\nconst Expenses = (props) =>\r\n{\r\n  let expenses = props.expenses;\r\n  let yearFilter = props.yearFilterSelected;\r\n\r\n  //Check if there are a year filter\r\n  if(yearFilter.length > 0)\r\n  {\r\n    expenses = props.expenses.filter(expense => {\r\n      return expense.date.getFullYear().toString() === yearFilter\r\n    });\r\n  }\r\n\r\n  //Cycle all expenses\r\n  if(typeof expenses != \"undefined\" || expenses.length > 0)\r\n  {\r\n    let expense = expenses.map(expense => (<Card className={\"expenses\"} key={expense.id}><ExpenseDate date={expense.date}/><ExpenseItem title={expense.title} amount={expense.amount} id={expense.id}/></Card>));\r\n  }\r\n  else\r\n  {\r\n    let expense = <p className={\"expenses\"}>No expenses found</p>;\r\n  }\r\n  \r\n\r\n  //Returns Card component container with inside ExpenseDate and ExprenseItem components. \r\n  //At ExpenseDate and ExprenseItem components pass date, title and amount through props.expenses\r\n  //which I previously passed from the App component\r\n  return (\r\n    <div>\r\n      {expense.length <= 0 && (<p className={\"expenses\"}>No expenses found</p>)}\r\n      {expense.length > 0 && (expense)}\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\n//Export component\r\nexport default Expenses;"]},"metadata":{},"sourceType":"module"}