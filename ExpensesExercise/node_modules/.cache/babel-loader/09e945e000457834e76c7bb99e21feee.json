{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kaffeina\\\\Desktop\\\\ReactCourse-main\\\\src\\\\chart\\\\Chart.js\";\n//Import component and css\nimport React from \"react\";\nimport ChartBar from \"./ChartBar\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Grid, Row, Col } from 'react-bootstrap';\nimport \"../css/Chart.css\"; //Chart component in arrow method\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chart = props => {\n  const dataPointValues = [];\n\n  for (let i = 0; i < props.dataPoints.length; i++) {\n    dataPointValues[i] = props.dataPoints[i].value;\n  }\n\n  const totalMaximum = Math.max(dataPointValues);\n  console.log(dataPointValues); //Map dataPoints array and pass parameters value at ChartBar component\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart\",\n    children: props.dataPoints.map(dataPoint => /*#__PURE__*/_jsxDEV(ChartBar, {\n      value: dataPoint.value,\n      maxValue: totalMaximum,\n      label: dataPoint.label\n    }, dataPoint.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 70\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 12\n  }, this);\n}; //Export component\n\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["C:/Users/Kaffeina/Desktop/ReactCourse-main/src/chart/Chart.js"],"names":["React","ChartBar","Grid","Row","Col","Chart","props","dataPointValues","i","dataPoints","length","value","totalMaximum","Math","max","console","log","map","dataPoint","label","key"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,sCAAP;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,GAApB,QAA+B,iBAA/B;AACA,OAAO,kBAAP,C,CAEA;;;;AACA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAErB,QAAMC,eAAe,GAAG,EAAxB;;AACA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,KAAK,CAACG,UAAN,CAAiBC,MAApC,EAA4CF,CAAC,EAA7C,EACA;AACID,IAAAA,eAAe,CAACC,CAAD,CAAf,GAAqBF,KAAK,CAACG,UAAN,CAAiBD,CAAjB,EAAoBG,KAAzC;AACH;;AACD,QAAMC,YAAY,GAAGC,IAAI,CAACC,GAAL,CAASP,eAAT,CAArB;AACJQ,EAAAA,OAAO,CAACC,GAAR,CAAYT,eAAZ,EARyB,CASrB;;AACA,sBAAO;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,cAAwBD,KAAK,CAACG,UAAN,CAAiBQ,GAAjB,CAAqBC,SAAS,iBAAI,QAAC,QAAD;AAA8B,MAAA,KAAK,EAAEA,SAAS,CAACP,KAA/C;AAAsD,MAAA,QAAQ,EAAEC,YAAhE;AAA8E,MAAA,KAAK,EAAEM,SAAS,CAACC;AAA/F,OAAeD,SAAS,CAACE,GAAzB;AAAA;AAAA;AAAA;AAAA,YAAlC;AAAxB;AAAA;AAAA;AAAA;AAAA,UAAP;AAEH,CAZD,C,CAcA;;;KAdMf,K;AAeN,eAAeA,KAAf","sourcesContent":["//Import component and css\r\nimport React from \"react\";\r\nimport ChartBar from \"./ChartBar\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Grid, Row, Col } from 'react-bootstrap';\r\nimport \"../css/Chart.css\";\r\n\r\n//Chart component in arrow method\r\nconst Chart = (props) => {\r\n\r\n    const dataPointValues = [];\r\n    for(let i = 0; i < props.dataPoints.length; i++)\r\n    {\r\n        dataPointValues[i] = props.dataPoints[i].value;\r\n    }\r\n    const totalMaximum = Math.max(dataPointValues);\r\nconsole.log(dataPointValues);\r\n    //Map dataPoints array and pass parameters value at ChartBar component\r\n    return <div className=\"chart\">{props.dataPoints.map(dataPoint => <ChartBar key={dataPoint.key} value={dataPoint.value} maxValue={totalMaximum} label={dataPoint.label} />)}</div>;\r\n\r\n};\r\n\r\n//Export component\r\nexport default Chart;"]},"metadata":{},"sourceType":"module"}