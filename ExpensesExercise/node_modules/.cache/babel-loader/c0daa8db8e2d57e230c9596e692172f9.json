{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kaffeina\\\\Desktop\\\\ReactCourse-main\\\\src\\\\components\\\\Expenses.js\";\n//Import components and css\nimport Card from \"./Card\";\nimport ExpenseDate from \"./ExpenseDate\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"../css/Expenses.css\"; //Expenses component in arrow method\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = props => {\n  let expenses2 = props.expenses;\n  let yearFilter = props.yearFilterSelected; //Check if there are a year filter\n\n  if (typeof yearFilter != \"undefined\") {\n    for (let i = 0; i < expenses.length; i++) {\n      if (typeof expenses[i] == \"undefined\" || expenses[i].date == \"undefined\" || expenses[i].length <= 0) {\n        continue;\n      }\n\n      let date = new Date(expenses[i].date);\n      let year = date.getFullYear(); //If the expense year is the same or there aren't a filter year class remain empty\n\n      if (year == yearFilter || yearFilter.length <= 0) {\n        expenses[i].class = \"\";\n      } //Else update class with \"d-none\"\n      else {\n        expenses[i].class = \"d-none\";\n      }\n    }\n  }\n\n  let expenses = props.expenses.filter(expense => {\n    return expense.date.getFullYear().toString() === yearFilter;\n  }); //Cycle all expenses\n\n  const expense = expenses.map(expense => /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses \" + expense.class,\n    children: [/*#__PURE__*/_jsxDEV(ExpenseDate, {\n      date: expense.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 107\n    }, this), /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      id: expense.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 141\n    }, this)]\n  }, expense.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 44\n  }, this)); //Returns Card component container with inside ExpenseDate and ExprenseItem components. \n  //At ExpenseDate and ExprenseItem components pass date, title and amount through props.expenses\n  //which I previously passed from the App component\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: expense\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}; //Export component\n\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["C:/Users/Kaffeina/Desktop/ReactCourse-main/src/components/Expenses.js"],"names":["Card","ExpenseDate","ExpenseItem","Expenses","props","expenses2","expenses","yearFilter","yearFilterSelected","i","length","date","Date","year","getFullYear","class","filter","expense","toString","map","title","amount","id"],"mappings":";AAAA;AACA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,qBAAP,C,CAEA;;;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IACjB;AACE,MAAIC,SAAS,GAAGD,KAAK,CAACE,QAAtB;AACA,MAAIC,UAAU,GAAGH,KAAK,CAACI,kBAAvB,CAFF,CAIE;;AACA,MAAG,OAAOD,UAAP,IAAqB,WAAxB,EACA;AACE,SAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGH,QAAQ,CAACI,MAA5B,EAAoCD,CAAC,EAArC,EACA;AACE,UAAG,OAAOH,QAAQ,CAACG,CAAD,CAAf,IAAsB,WAAtB,IAAqCH,QAAQ,CAACG,CAAD,CAAR,CAAYE,IAAZ,IAAoB,WAAzD,IAAwEL,QAAQ,CAACG,CAAD,CAAR,CAAYC,MAAZ,IAAsB,CAAjG,EACA;AACE;AACD;;AAED,UAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASN,QAAQ,CAACG,CAAD,CAAR,CAAYE,IAArB,CAAX;AACA,UAAIE,IAAI,GAAGF,IAAI,CAACG,WAAL,EAAX,CAPF,CASE;;AACA,UAAGD,IAAI,IAAIN,UAAR,IAAsBA,UAAU,CAACG,MAAX,IAAqB,CAA9C,EACA;AACEJ,QAAAA,QAAQ,CAACG,CAAD,CAAR,CAAYM,KAAZ,GAAoB,EAApB;AACD,OAHD,CAIA;AAJA,WAMA;AACET,QAAAA,QAAQ,CAACG,CAAD,CAAR,CAAYM,KAAZ,GAAoB,QAApB;AACD;AACF;AACF;;AAED,MAAIT,QAAQ,GAAGF,KAAK,CAACE,QAAN,CAAeU,MAAf,CAAsBC,OAAO,IAAI;AAAC,WAAOA,OAAO,CAACN,IAAR,CAAaG,WAAb,GAA2BI,QAA3B,OAA0CX,UAAjD;AAA4D,GAA9F,CAAf,CA9BF,CAiCE;;AACA,QAAMU,OAAO,GAAGX,QAAQ,CAACa,GAAT,CAAaF,OAAO,iBAAK,QAAC,IAAD;AAAM,IAAA,SAAS,EAAE,cAAcA,OAAO,CAACF,KAAvC;AAAA,4BAA+D,QAAC,WAAD;AAAa,MAAA,IAAI,EAAEE,OAAO,CAACN;AAA3B;AAAA;AAAA;AAAA;AAAA,YAA/D,eAAiG,QAAC,WAAD;AAAa,MAAA,KAAK,EAAEM,OAAO,CAACG,KAA5B;AAAmC,MAAA,MAAM,EAAEH,OAAO,CAACI,MAAnD;AAA2D,MAAA,EAAE,EAAEJ,OAAO,CAACK;AAAvE;AAAA;AAAA;AAAA;AAAA,YAAjG;AAAA,KAAmDL,OAAO,CAACK,EAA3D;AAAA;AAAA;AAAA;AAAA,UAAzB,CAAhB,CAlCF,CAoCE;AACA;AACA;;AACA,sBACE;AAAA,cACGL;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA9CD,C,CAgDA;;;KAhDMd,Q;AAiDN,eAAeA,QAAf","sourcesContent":["//Import components and css\r\nimport Card from \"./Card\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport \"../css/Expenses.css\";\r\n\r\n//Expenses component in arrow method\r\nconst Expenses = (props) =>\r\n{\r\n  let expenses2 = props.expenses;\r\n  let yearFilter = props.yearFilterSelected;\r\n\r\n  //Check if there are a year filter\r\n  if(typeof yearFilter != \"undefined\")\r\n  {\r\n    for(let i = 0; i < expenses.length; i++)\r\n    {\r\n      if(typeof expenses[i] == \"undefined\" || expenses[i].date == \"undefined\" || expenses[i].length <= 0)\r\n      {\r\n        continue; \r\n      }\r\n  \r\n      let date = new Date(expenses[i].date);\r\n      let year = date.getFullYear();\r\n  \r\n      //If the expense year is the same or there aren't a filter year class remain empty\r\n      if(year == yearFilter || yearFilter.length <= 0)\r\n      {\r\n        expenses[i].class = \"\";\r\n      }\r\n      //Else update class with \"d-none\"\r\n      else\r\n      {\r\n        expenses[i].class = \"d-none\";\r\n      }      \r\n    }\r\n  }\r\n\r\n  let expenses = props.expenses.filter(expense => {return expense.date.getFullYear().toString() === yearFilter});\r\n\r\n\r\n  //Cycle all expenses\r\n  const expense = expenses.map(expense => (<Card className={\"expenses \" + expense.class} key={expense.id}><ExpenseDate date={expense.date}/><ExpenseItem title={expense.title} amount={expense.amount} id={expense.id}/></Card>));\r\n\r\n  //Returns Card component container with inside ExpenseDate and ExprenseItem components. \r\n  //At ExpenseDate and ExprenseItem components pass date, title and amount through props.expenses\r\n  //which I previously passed from the App component\r\n  return (\r\n    <div>\r\n      {expense}\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\n//Export component\r\nexport default Expenses;"]},"metadata":{},"sourceType":"module"}