[{"C:\\Users\\Kaffeina\\Desktop\\React-Course\\my-app\\src\\index.js":"1","C:\\Users\\Kaffeina\\Desktop\\React-Course\\my-app\\src\\reportWebVitals.js":"2","C:\\Users\\Kaffeina\\Desktop\\React-Course\\my-app\\src\\App.js":"3","C:\\Users\\Kaffeina\\Desktop\\React-Course\\my-app\\src\\components\\ExpenseItem.js":"4","C:\\Users\\Kaffeina\\Desktop\\React-Course\\my-app\\src\\components\\ExpenseDate.js":"5","C:\\Users\\Kaffeina\\Desktop\\React-Course\\my-app\\src\\components\\Expenses.js":"6","C:\\Users\\Kaffeina\\Desktop\\React-Course\\my-app\\src\\components\\Card.js":"7","C:\\Users\\Kaffeina\\Desktop\\ReactCourse-main\\src\\index.js":"8","C:\\Users\\Kaffeina\\Desktop\\ReactCourse-main\\src\\reportWebVitals.js":"9","C:\\Users\\Kaffeina\\Desktop\\ReactCourse-main\\src\\App.js":"10","C:\\Users\\Kaffeina\\Desktop\\ReactCourse-main\\src\\components\\Expenses.js":"11","C:\\Users\\Kaffeina\\Desktop\\ReactCourse-main\\src\\components\\Card.js":"12","C:\\Users\\Kaffeina\\Desktop\\ReactCourse-main\\src\\components\\ExpenseDate.js":"13","C:\\Users\\Kaffeina\\Desktop\\ReactCourse-main\\src\\components\\ExpenseItem.js":"14","C:\\Users\\Kaffeina\\Desktop\\ReactCourse-main\\src\\newExpense\\NewExpense.js":"15","C:\\Users\\Kaffeina\\Desktop\\ReactCourse-main\\src\\newExpense\\ExpenseForm.js":"16","C:\\Users\\Kaffeina\\Desktop\\ReactCourse-main\\src\\filterExpense\\ExpenseFilter.js":"17","C:\\Users\\Kaffeina\\Desktop\\ReactCourse-main\\src\\filterExpense\\ExpenseFilterSelect.js":"18"},{"size":606,"mtime":1634570710076,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"20"},{"size":1313,"mtime":1634570720755,"results":"22","hashOfConfig":"20"},{"size":929,"mtime":1634570716027,"results":"23","hashOfConfig":"20"},{"size":922,"mtime":1634570727468,"results":"24","hashOfConfig":"20"},{"size":729,"mtime":1634570732077,"results":"25","hashOfConfig":"20"},{"size":482,"mtime":1634570724229,"results":"26","hashOfConfig":"20"},{"size":606,"mtime":1634719145758,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":499162500000,"results":"29","hashOfConfig":"28"},{"size":3164,"mtime":1634809964133,"results":"30","hashOfConfig":"28"},{"size":1308,"mtime":1634812167113,"results":"31","hashOfConfig":"28"},{"size":482,"mtime":1634630322525,"results":"32","hashOfConfig":"28"},{"size":922,"mtime":1634647870158,"results":"33","hashOfConfig":"28"},{"size":1630,"mtime":1634727527597,"results":"34","hashOfConfig":"28"},{"size":2677,"mtime":1634824396246,"results":"35","hashOfConfig":"28"},{"size":6417,"mtime":1634813167342,"results":"36","hashOfConfig":"28"},{"size":2784,"mtime":1634824150266,"results":"37","hashOfConfig":"28"},{"size":3079,"mtime":1634804826189,"results":"38","hashOfConfig":"28"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1caxehb",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1jbwtnf",{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"56"},"C:\\Users\\Kaffeina\\Desktop\\React-Course\\my-app\\src\\index.js",[],"C:\\Users\\Kaffeina\\Desktop\\React-Course\\my-app\\src\\reportWebVitals.js",[],["79","80"],"C:\\Users\\Kaffeina\\Desktop\\React-Course\\my-app\\src\\App.js",[],"C:\\Users\\Kaffeina\\Desktop\\React-Course\\my-app\\src\\components\\ExpenseItem.js",[],"C:\\Users\\Kaffeina\\Desktop\\React-Course\\my-app\\src\\components\\ExpenseDate.js",[],"C:\\Users\\Kaffeina\\Desktop\\React-Course\\my-app\\src\\components\\Expenses.js",[],"C:\\Users\\Kaffeina\\Desktop\\React-Course\\my-app\\src\\components\\Card.js",[],"C:\\Users\\Kaffeina\\Desktop\\ReactCourse-main\\src\\index.js",[],["81","82"],"C:\\Users\\Kaffeina\\Desktop\\ReactCourse-main\\src\\reportWebVitals.js",[],"C:\\Users\\Kaffeina\\Desktop\\ReactCourse-main\\src\\App.js",["83"],"//Import components\nimport React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses\";\nimport NewExpense from \"./newExpense/NewExpense\";\nimport ExpenseFilter from \"./filterExpense/ExpenseFilter\";\n\n//App component\nfunction App() {\n  //Variable with expenses to pass to pass to Expenses component\n  let expenses = [\n    {\n      id: \"e1\",\n      title: \"Toilette Paper\",\n      amount: 294.67,\n      date: new Date(2021, 1, 25)\n    },\n    { \n      id: \"e2\", \n      title: \"New TV\", \n      amount: 294.67, \n      date: new Date(2021, 2, 28)\n    },\n    {\n      id: \"e3\",\n      title: \"Car Insurance\",\n      amount: 294.67,\n      date: new Date(2021, 7, 12)\n    },\n    {\n      id: \"e4\",\n      title: \"New Desktop\",\n      amount: 294.67,\n      date: new Date(2019, 2, 6)\n    },\n  ];\n\n  let expensesOrig = expenses;\n\n  //Constant with previous expenses and js method for update expense after insert a new expense\n  const [expensesUpdated, setExpenses] = useState(expenses);\n  const [expensesOrigUpdated, setExpensesOrig] = useState(expenses);\n  const [yearFilterSelected, setYearFilterSelected] = useState('');\n\n  //Arrow method recall when comes inserted a new expense\n  const addExpenseDataHandler = (expense) => {\n    //Constant with a new expense, comes add id and date object\n    const expenseData = {\n      id: \"e\" + (expenses.length + 1),\n      ...expense,\n      date: new Date(expense.data),\n    };\n\n    //Concat this new expense with previous expenses\n    expenses = expenses.concat(expenseData); \n    expensesOrig = expenses;\n    \n    //Call method for change expenses variable and update list without refresh the page\n    setExpenses(expenses);\n    setExpensesOrig(expenses);\n  };\n\n  expenses = expensesUpdated;\n\n  //Year for filter expenses\n  const yearFilter = (year) => {\n    setYearFilterSelected(year);\n\n    //Check if is been added a new expense\n    let expenseOrigTmp = expensesOrig;\n    if(expensesOrig.length != expensesOrigUpdated.length)\n    {\n      expenseOrigTmp = expensesOrigUpdated;\n    }\n    \n    setExpenses(expenseOrigTmp);\n};\n\n  //I create a div where inside there are a h2 tag and another three div with NewExpense for insert a new expense, ExpenseFilter for filter expense and Expenses components for print the expenses before.\n  //A NewExpense component pass expenses constant and take a new expense (from child to parent), ExpenseFilter pass expenses constant and take a yearFilter (from child to parent) and Expenses component pass expenses constant and yearFilterSelected\n  return React.createElement(\n    \"div\",\n    {},\n    React.createElement(\"h2\", {}, \"Prima applicazione con React\"),\n    React.createElement(\n      \"div\",\n      {},\n      React.createElement(NewExpense, {expenses: expenses, onAddExpense: addExpenseDataHandler})\n    ),\n    React.createElement(\n      \"div\",\n      {},\n      React.createElement(ExpenseFilter, {expenses: expenses, selected: yearFilterSelected, onSetYearFilter: yearFilter})\n    ),\n    React.createElement(\n      \"div\",\n      {},\n      React.createElement(Expenses, { expenses: expenses, yearFilterSelected: yearFilterSelected})\n    )\n  );\n}\n\n//export component\nexport default App;\n","C:\\Users\\Kaffeina\\Desktop\\ReactCourse-main\\src\\components\\Expenses.js",[],"C:\\Users\\Kaffeina\\Desktop\\ReactCourse-main\\src\\components\\Card.js",[],"C:\\Users\\Kaffeina\\Desktop\\ReactCourse-main\\src\\components\\ExpenseDate.js",[],"C:\\Users\\Kaffeina\\Desktop\\ReactCourse-main\\src\\components\\ExpenseItem.js",[],"C:\\Users\\Kaffeina\\Desktop\\ReactCourse-main\\src\\newExpense\\NewExpense.js",["84"],"C:\\Users\\Kaffeina\\Desktop\\ReactCourse-main\\src\\newExpense\\ExpenseForm.js",[],"C:\\Users\\Kaffeina\\Desktop\\ReactCourse-main\\src\\filterExpense\\ExpenseFilter.js",["85"],"C:\\Users\\Kaffeina\\Desktop\\ReactCourse-main\\src\\filterExpense\\ExpenseFilterSelect.js",["86","87"],"//Import component\r\nimport React, { useState } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Row, Col } from 'react-bootstrap';\r\n\r\n//ExpenseFilterSelect component in arrow method\r\nconst ExpenseFilterSelect = (props) => {\r\n    //Constant with all expenses\r\n    const expenses = props.expenses;\r\n\r\n\r\n    //Constants with previous yearFilterSelected and js method for update them\r\n    const [yearFilterSelected, setYearFilterSelected] = useState('');\r\n\r\n    //Array with years selectable for the filter\r\n    let yearsFilter = [];\r\n    for(let i = 0; i < expenses.length; i++)\r\n    {\r\n        if(typeof expenses[i] == \"undefined\" || typeof expenses[i].date == \"undefined\" || expenses[i].date.length <= 0)\r\n        {\r\n            continue;\r\n        }\r\n\r\n        //Get year from date expense\r\n        let date = expenses[i].date;\r\n        date = new Date(date);\r\n        let year = date.getFullYear();\r\n\r\n        if(typeof year == \"undefined\" || year <= 0)\r\n        {\r\n            continue;\r\n        }\r\n\r\n        //If year is already in array I don't insert it\r\n        let inArrayYear = inArray(year, yearsFilter);\r\n\r\n        if(inArrayYear)\r\n        {\r\n            continue;\r\n        }\r\n\r\n        //Add year into yearsFilter array\r\n        yearsFilter.push(year);\r\n    }\r\n\r\n    //I order the array from lower to higher\r\n    yearsFilter.sort();\r\n\r\n\r\n    //Function for check if value is in array\r\n    function inArray(value, array)\r\n    {\r\n        if(typeof value == \"undefined\" || typeof array == \"undefined\")\r\n        {\r\n            return true;\r\n        }\r\n\r\n        for(let i = 0; i < array.length; i++) \r\n        {\r\n            //If in array return true\r\n            if(array[i] == value) \r\n            {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        //If not in array return false\r\n        return false;\r\n    };\r\n\r\n    //Update yearFilterSelected and pass it to the parent component\r\n    const newYearFilterSelected = (event) => {\r\n        setYearFilterSelected(event.target.value);\r\n        props.onSetYearFilter(event.target.value);\r\n    };\r\n\r\n    //Cycle all expense years and insert it in a option tag\r\n    const expenseYearsOption = yearsFilter.map(year => (<option key={year} value={year}>{year}</option>));\r\n\r\n    //Returns the filters of the years\r\n    return (\r\n        <Col xs={12}>\r\n            <Row>\r\n                <Col xs={9} sm={9} md={10}>\r\n                    <p className=\"m-0 d-flex justify-content-end align-items-center\"><strong>Select year:</strong></p> \r\n                </Col>\r\n                <Col xs={3} sm={3} md={2}>\r\n                    <div className=\"m-0 d-flex justify-content-start align-items-center\">\r\n                        <select onChange={newYearFilterSelected} value={props.selected}>\r\n                            <option value=\"\">All</option>\r\n                            {expenseYearsOption}\r\n                        </select>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Col>\r\n    );\r\n};\r\n\r\n\r\n//Export component\r\nexport default ExpenseFilterSelect;",{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"88","replacedBy":"92"},{"ruleId":"90","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":70,"column":28,"nodeType":"96","messageId":"97","endLine":70,"endColumn":30},{"ruleId":"98","severity":1,"message":"99","line":8,"column":10,"nodeType":"100","messageId":"101","endLine":8,"endColumn":14},{"ruleId":"98","severity":1,"message":"99","line":7,"column":10,"nodeType":"100","messageId":"101","endLine":7,"endColumn":14},{"ruleId":"98","severity":1,"message":"102","line":13,"column":12,"nodeType":"100","messageId":"101","endLine":13,"endColumn":30},{"ruleId":"94","severity":1,"message":"103","line":61,"column":25,"nodeType":"96","messageId":"97","endLine":61,"endColumn":27},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],["104"],["105"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unused-vars","'Grid' is defined but never used.","Identifier","unusedVar","'yearFilterSelected' is assigned a value but never used.","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation"]