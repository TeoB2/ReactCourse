[{"C:\\Users\\Kaffeina\\Desktop\\React-Course\\my-app\\src\\index.js":"1","C:\\Users\\Kaffeina\\Desktop\\React-Course\\my-app\\src\\reportWebVitals.js":"2","C:\\Users\\Kaffeina\\Desktop\\React-Course\\my-app\\src\\App.js":"3","C:\\Users\\Kaffeina\\Desktop\\React-Course\\my-app\\src\\components\\ExpenseItem.js":"4","C:\\Users\\Kaffeina\\Desktop\\React-Course\\my-app\\src\\components\\ExpenseDate.js":"5","C:\\Users\\Kaffeina\\Desktop\\React-Course\\my-app\\src\\components\\Expenses.js":"6","C:\\Users\\Kaffeina\\Desktop\\React-Course\\my-app\\src\\components\\Card.js":"7","C:\\Users\\Kaffeina\\Desktop\\ReactCourse-main\\src\\index.js":"8","C:\\Users\\Kaffeina\\Desktop\\ReactCourse-main\\src\\reportWebVitals.js":"9","C:\\Users\\Kaffeina\\Desktop\\ReactCourse-main\\src\\App.js":"10","C:\\Users\\Kaffeina\\Desktop\\ReactCourse-main\\src\\components\\Expenses.js":"11","C:\\Users\\Kaffeina\\Desktop\\ReactCourse-main\\src\\components\\Card.js":"12","C:\\Users\\Kaffeina\\Desktop\\ReactCourse-main\\src\\components\\ExpenseDate.js":"13","C:\\Users\\Kaffeina\\Desktop\\ReactCourse-main\\src\\components\\ExpenseItem.js":"14","C:\\Users\\Kaffeina\\Desktop\\ReactCourse-main\\src\\newExpense\\NewExpense.js":"15","C:\\Users\\Kaffeina\\Desktop\\ReactCourse-main\\src\\newExpense\\ExpenseForm.js":"16","C:\\Users\\Kaffeina\\Desktop\\ReactCourse-main\\src\\filterExpense\\ExpenseFilter.js":"17","C:\\Users\\Kaffeina\\Desktop\\ReactCourse-main\\src\\filterExpense\\ExpenseFilterSelect.js":"18","C:\\Users\\Kaffeina\\Desktop\\ReactCourse-main\\src\\chart\\ExpenseChart.js":"19","C:\\Users\\Kaffeina\\Desktop\\ReactCourse-main\\src\\chart\\Chart.js":"20","C:\\Users\\Kaffeina\\Desktop\\ReactCourse-main\\src\\chart\\ChartBar.js":"21"},{"size":606,"mtime":1634570710076,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"23"},{"size":1313,"mtime":1634570720755,"results":"25","hashOfConfig":"23"},{"size":929,"mtime":1634570716027,"results":"26","hashOfConfig":"23"},{"size":922,"mtime":1634570727468,"results":"27","hashOfConfig":"23"},{"size":729,"mtime":1634570732077,"results":"28","hashOfConfig":"23"},{"size":482,"mtime":1634570724229,"results":"29","hashOfConfig":"23"},{"size":606,"mtime":1634719145758,"results":"30","hashOfConfig":"31"},{"size":362,"mtime":499162500000,"results":"32","hashOfConfig":"31"},{"size":3164,"mtime":1634809964133,"results":"33","hashOfConfig":"31"},{"size":1402,"mtime":1634891970380,"results":"34","hashOfConfig":"31"},{"size":482,"mtime":1634630322525,"results":"35","hashOfConfig":"31"},{"size":922,"mtime":1634647870158,"results":"36","hashOfConfig":"31"},{"size":1630,"mtime":1634727527597,"results":"37","hashOfConfig":"31"},{"size":2677,"mtime":1634824396246,"results":"38","hashOfConfig":"31"},{"size":6417,"mtime":1634891049600,"results":"39","hashOfConfig":"31"},{"size":2784,"mtime":1634824150266,"results":"40","hashOfConfig":"31"},{"size":3079,"mtime":1634804826189,"results":"41","hashOfConfig":"31"},{"size":967,"mtime":1634889818227,"results":"42","hashOfConfig":"31"},{"size":785,"mtime":1634892196774,"results":"43","hashOfConfig":"31"},{"size":878,"mtime":1634888903418,"results":"44","hashOfConfig":"31"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1caxehb",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1jbwtnf",{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"62"},"C:\\Users\\Kaffeina\\Desktop\\React-Course\\my-app\\src\\index.js",[],"C:\\Users\\Kaffeina\\Desktop\\React-Course\\my-app\\src\\reportWebVitals.js",[],["94","95"],"C:\\Users\\Kaffeina\\Desktop\\React-Course\\my-app\\src\\App.js",[],"C:\\Users\\Kaffeina\\Desktop\\React-Course\\my-app\\src\\components\\ExpenseItem.js",[],"C:\\Users\\Kaffeina\\Desktop\\React-Course\\my-app\\src\\components\\ExpenseDate.js",[],"C:\\Users\\Kaffeina\\Desktop\\React-Course\\my-app\\src\\components\\Expenses.js",[],"C:\\Users\\Kaffeina\\Desktop\\React-Course\\my-app\\src\\components\\Card.js",[],"C:\\Users\\Kaffeina\\Desktop\\ReactCourse-main\\src\\index.js",[],["96","97"],"C:\\Users\\Kaffeina\\Desktop\\ReactCourse-main\\src\\reportWebVitals.js",[],"C:\\Users\\Kaffeina\\Desktop\\ReactCourse-main\\src\\App.js",["98"],"//Import components\nimport React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses\";\nimport NewExpense from \"./newExpense/NewExpense\";\nimport ExpenseFilter from \"./filterExpense/ExpenseFilter\";\n\n//App component\nfunction App() {\n  //Variable with expenses to pass to pass to Expenses component\n  let expenses = [\n    {\n      id: \"e1\",\n      title: \"Toilette Paper\",\n      amount: 294.67,\n      date: new Date(2021, 1, 25)\n    },\n    { \n      id: \"e2\", \n      title: \"New TV\", \n      amount: 294.67, \n      date: new Date(2021, 2, 28)\n    },\n    {\n      id: \"e3\",\n      title: \"Car Insurance\",\n      amount: 294.67,\n      date: new Date(2021, 7, 12)\n    },\n    {\n      id: \"e4\",\n      title: \"New Desktop\",\n      amount: 294.67,\n      date: new Date(2019, 2, 6)\n    },\n  ];\n\n  let expensesOrig = expenses;\n\n  //Constant with previous expenses and js method for update expense after insert a new expense\n  const [expensesUpdated, setExpenses] = useState(expenses);\n  const [expensesOrigUpdated, setExpensesOrig] = useState(expenses);\n  const [yearFilterSelected, setYearFilterSelected] = useState('');\n\n  //Arrow method recall when comes inserted a new expense\n  const addExpenseDataHandler = (expense) => {\n    //Constant with a new expense, comes add id and date object\n    const expenseData = {\n      id: \"e\" + (expenses.length + 1),\n      ...expense,\n      date: new Date(expense.data),\n    };\n\n    //Concat this new expense with previous expenses\n    expenses = expenses.concat(expenseData); \n    expensesOrig = expenses;\n    \n    //Call method for change expenses variable and update list without refresh the page\n    setExpenses(expenses);\n    setExpensesOrig(expenses);\n  };\n\n  expenses = expensesUpdated;\n\n  //Year for filter expenses\n  const yearFilter = (year) => {\n    setYearFilterSelected(year);\n\n    //Check if is been added a new expense\n    let expenseOrigTmp = expensesOrig;\n    if(expensesOrig.length != expensesOrigUpdated.length)\n    {\n      expenseOrigTmp = expensesOrigUpdated;\n    }\n    \n    setExpenses(expenseOrigTmp);\n};\n\n  //I create a div where inside there are a h2 tag and another three div with NewExpense for insert a new expense, ExpenseFilter for filter expense and Expenses components for print the expenses before.\n  //A NewExpense component pass expenses constant and take a new expense (from child to parent), ExpenseFilter pass expenses constant and take a yearFilter (from child to parent) and Expenses component pass expenses constant and yearFilterSelected\n  return React.createElement(\n    \"div\",\n    {},\n    React.createElement(\"h2\", {}, \"Prima applicazione con React\"),\n    React.createElement(\n      \"div\",\n      {},\n      React.createElement(NewExpense, {expenses: expenses, onAddExpense: addExpenseDataHandler})\n    ),\n    React.createElement(\n      \"div\",\n      {},\n      React.createElement(ExpenseFilter, {expenses: expenses, selected: yearFilterSelected, onSetYearFilter: yearFilter})\n    ),\n    React.createElement(\n      \"div\",\n      {},\n      React.createElement(Expenses, { expenses: expenses, yearFilterSelected: yearFilterSelected})\n    )\n  );\n}\n\n//export component\nexport default App;\n","C:\\Users\\Kaffeina\\Desktop\\ReactCourse-main\\src\\components\\Expenses.js",[],"C:\\Users\\Kaffeina\\Desktop\\ReactCourse-main\\src\\components\\Card.js",[],"C:\\Users\\Kaffeina\\Desktop\\ReactCourse-main\\src\\components\\ExpenseDate.js",[],"C:\\Users\\Kaffeina\\Desktop\\ReactCourse-main\\src\\components\\ExpenseItem.js",[],"C:\\Users\\Kaffeina\\Desktop\\ReactCourse-main\\src\\newExpense\\NewExpense.js",["99"],"//Import component and css\r\nimport React, { useState } from \"react\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChevronDown, faChevronUp } from '@fortawesome/free-solid-svg-icons'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"../css/NewExpense.css\";\r\nimport { Grid, Row, Col } from 'react-bootstrap';\r\n\r\n\r\n//NewExpense component in arrow method\r\nconst NewExpense = (props) => {\r\n\r\n  //Constants with openAddExpensePanel and js method for update him\r\n  const [openAddExpensePanel, setOpenAddExpensePanel] = useState(false);\r\n  \r\n  //Arrow method for pass data from child to parent\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n      //I pass expenseData to the parent component\r\n      props.onAddExpense(enteredExpenseData);\r\n  };\r\n\r\n\r\n  //Arrow method for open-close the insertion of new expenses\r\n  const openCloseAddExpensePanel = () => {\r\n    if(openAddExpensePanel)\r\n    {\r\n      //Update openAddExpensePanel flag in false\r\n      setOpenAddExpensePanel(false);\r\n    }\r\n    else\r\n    {\r\n      //Update openAddExpensePanel flag in true\r\n      setOpenAddExpensePanel(true);\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  //Constants with Code for add expense panel and arrow\r\n  const addExpensePanel = <Row className=\"mt-4\" id=\"addNewExpensePanel\"><ExpenseForm expenses={props.expenses} onSaveExpenseData={saveExpenseDataHandler} /></Row>;\r\n  const arrowDownAddExpense = <FontAwesomeIcon icon={faChevronDown} id=\"arrowDownAddExpense\" className=\"h3 cursorHandler m-0\" title=\"Click for add a new expense\" onClick={openCloseAddExpensePanel}/>;\r\n  const arrowUpAddExpense = <FontAwesomeIcon icon={faChevronUp} id=\"arrowUpAddExpense\" className=\"h3 cursorHandler m-0\" title=\"Click for close add new expense panel\" onClick={openCloseAddExpensePanel}/>;\r\n\r\n  //Returns div with inside ExpenseForm component.\r\n  //At ExpenseForm components pass expenses through props.expenses\r\n  //which I previously passed from the App component\r\n  //onSaveExpenseData is a listener that if is inserted a new expense\r\n  //take it from his child recall a saveExpenseDataHandler function\r\n  return (\r\n    <div className=\"new-expense\">\r\n      <Row>\r\n        <Col xs={2} />\r\n        <Col xs={8}>\r\n          <h3 className=\"m-0\">Add Expense</h3>\r\n        </Col>\r\n        <Col xs={2} className=\"d-flex justify-content-end align-items-center\">\r\n          {openAddExpensePanel ? arrowUpAddExpense : arrowDownAddExpense}\r\n          <p>{openAddExpensePanel}</p>\r\n        </Col>\r\n      </Row>\r\n      {openAddExpensePanel ? addExpensePanel : ''}\r\n    </div>\r\n  );\r\n};\r\n\r\n//Export component\r\nexport default NewExpense;\r\n","C:\\Users\\Kaffeina\\Desktop\\ReactCourse-main\\src\\newExpense\\ExpenseForm.js",[],"C:\\Users\\Kaffeina\\Desktop\\ReactCourse-main\\src\\filterExpense\\ExpenseFilter.js",["100"],"//Import component and css\r\nimport React from \"react\";\r\nimport ExpenseFilterSelect from \"../filterExpense/ExpenseFilterSelect\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChevronDown, faChevronUp } from '@fortawesome/free-solid-svg-icons'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Grid, Row, Col } from 'react-bootstrap';\r\nimport \"../css/ExpenseFilter.css\";\r\n\r\n//ExpenseFilter component in arrow method\r\nconst ExpenseFilter = (props) => {\r\n    //Constant with all expenses and year selected\r\n    const expenses = props.expenses;\r\n    const selected = props.selected;\r\n\r\n    //Arrow method for open-close expenses filter\r\n    const openCloseExpenseFilter = () => {\r\n        let arrowDownExpenseFilter = document.getElementById(\"arrowDownExpenseFilter\");\r\n        let arrowUpExpenseFilter = document.getElementById(\"arrowUpExpenseFilter\");\r\n        let expenseFilter = document.getElementById(\"expenseFilter\");\r\n        \r\n        //Close panel\r\n        if(arrowDownExpenseFilter.classList.contains(\"d-none\"))\r\n        {\r\n        arrowDownExpenseFilter.classList.remove(\"d-none\");\r\n        arrowUpExpenseFilter.classList.add(\"d-none\");\r\n        expenseFilter.classList.add(\"d-none\");\r\n        }\r\n        //Open panel\r\n        else if(arrowUpExpenseFilter.classList.contains(\"d-none\"))\r\n        {\r\n        arrowDownExpenseFilter.classList.add(\"d-none\");\r\n        arrowUpExpenseFilter.classList.remove(\"d-none\");\r\n        expenseFilter.classList.remove(\"d-none\");\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n\r\n    //Arrow method for pass year to the parent component\r\n    const yearFilterSelected = (year) => {\r\n        //I pass year to the parent component\r\n        props.onSetYearFilter(year);\r\n    };\r\n\r\n    //Returns an expense filter, for now only the year\r\n    return (\r\n        <div className=\"expense-filter\">\r\n          <Row>\r\n            <Col xs={2} />\r\n            <Col xs={8}>\r\n              <h3 className=\"m-0\">Expense Filter</h3>\r\n              </Col>\r\n            <Col xs={2} className=\"d-flex justify-content-end align-items-center\">\r\n              <FontAwesomeIcon icon={faChevronDown} id=\"arrowDownExpenseFilter\" className=\"h3 cursorHandler m-0\" title=\"Click for show expense filter\" onClick={openCloseExpenseFilter}/>\r\n              <FontAwesomeIcon icon={faChevronUp} id=\"arrowUpExpenseFilter\" className=\"h3 cursorHandler d-none m-0\" title=\"Click for hide expense filter\" onClick={openCloseExpenseFilter}/>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"d-none mt-4\" id=\"expenseFilter\">\r\n            <ExpenseFilterSelect expenses={expenses} selected={selected} onSetYearFilter={yearFilterSelected}/>\r\n          </Row>\r\n      </div>\r\n    );\r\n};\r\n\r\n\r\n//Export component\r\nexport default ExpenseFilter;","C:\\Users\\Kaffeina\\Desktop\\ReactCourse-main\\src\\filterExpense\\ExpenseFilterSelect.js",["101","102"],"//Import component\r\nimport React, { useState } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Row, Col } from 'react-bootstrap';\r\n\r\n//ExpenseFilterSelect component in arrow method\r\nconst ExpenseFilterSelect = (props) => {\r\n    //Constant with all expenses\r\n    const expenses = props.expenses;\r\n\r\n\r\n    //Constants with previous yearFilterSelected and js method for update them\r\n    const [yearFilterSelected, setYearFilterSelected] = useState('');\r\n\r\n    //Array with years selectable for the filter\r\n    let yearsFilter = [];\r\n    for(let i = 0; i < expenses.length; i++)\r\n    {\r\n        if(typeof expenses[i] == \"undefined\" || typeof expenses[i].date == \"undefined\" || expenses[i].date.length <= 0)\r\n        {\r\n            continue;\r\n        }\r\n\r\n        //Get year from date expense\r\n        let date = expenses[i].date;\r\n        date = new Date(date);\r\n        let year = date.getFullYear();\r\n\r\n        if(typeof year == \"undefined\" || year <= 0)\r\n        {\r\n            continue;\r\n        }\r\n\r\n        //If year is already in array I don't insert it\r\n        let inArrayYear = inArray(year, yearsFilter);\r\n\r\n        if(inArrayYear)\r\n        {\r\n            continue;\r\n        }\r\n\r\n        //Add year into yearsFilter array\r\n        yearsFilter.push(year);\r\n    }\r\n\r\n    //I order the array from lower to higher\r\n    yearsFilter.sort();\r\n\r\n\r\n    //Function for check if value is in array\r\n    function inArray(value, array)\r\n    {\r\n        if(typeof value == \"undefined\" || typeof array == \"undefined\")\r\n        {\r\n            return true;\r\n        }\r\n\r\n        for(let i = 0; i < array.length; i++) \r\n        {\r\n            //If in array return true\r\n            if(array[i] == value) \r\n            {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        //If not in array return false\r\n        return false;\r\n    };\r\n\r\n    //Update yearFilterSelected and pass it to the parent component\r\n    const newYearFilterSelected = (event) => {\r\n        setYearFilterSelected(event.target.value);\r\n        props.onSetYearFilter(event.target.value);\r\n    };\r\n\r\n    //Cycle all expense years and insert it in a option tag\r\n    const expenseYearsOption = yearsFilter.map(year => (<option key={year} value={year}>{year}</option>));\r\n\r\n    //Returns the filters of the years\r\n    return (\r\n        <Col xs={12}>\r\n            <Row>\r\n                <Col xs={9} sm={9} md={10}>\r\n                    <p className=\"m-0 d-flex justify-content-end align-items-center\"><strong>Select year:</strong></p> \r\n                </Col>\r\n                <Col xs={3} sm={3} md={2}>\r\n                    <div className=\"m-0 d-flex justify-content-start align-items-center\">\r\n                        <select onChange={newYearFilterSelected} value={props.selected}>\r\n                            <option value=\"\">All</option>\r\n                            {expenseYearsOption}\r\n                        </select>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Col>\r\n    );\r\n};\r\n\r\n\r\n//Export component\r\nexport default ExpenseFilterSelect;","C:\\Users\\Kaffeina\\Desktop\\ReactCourse-main\\src\\chart\\ExpenseChart.js",["103"],"C:\\Users\\Kaffeina\\Desktop\\ReactCourse-main\\src\\chart\\Chart.js",["104","105","106"],"C:\\Users\\Kaffeina\\Desktop\\ReactCourse-main\\src\\chart\\ChartBar.js",["107","108","109"],"//Import component and css\r\nimport React from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Grid, Row, Col } from 'react-bootstrap';\r\nimport \"../css/ChartBar.css\";\r\n\r\n//ChartBar component in arrow method\r\nconst ChartBar = (props) => {\r\n\r\n    let barFillHeight = \"0%\";\r\n\r\n    if(props.maxValue > 0)\r\n    {\r\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n    }\r\n\r\n    return (\r\n            <div className=\"chart-bar\">\r\n                <div className=\"chart-bar__inner\">\r\n                    <div className=\"chart-bar__fill\" style={{height: barFillHeight, backgroundColor: \"red\"}}>\r\n                    </div>\r\n                </div>\r\n                <div className=\"chart-bar__label\">\r\n                    {props.label}\r\n                </div>\r\n            </div>\r\n    );\r\n\r\n};\r\n\r\n//Export component\r\nexport default ChartBar;",{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"110","replacedBy":"114"},{"ruleId":"112","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":70,"column":28,"nodeType":"118","messageId":"119","endLine":70,"endColumn":30},{"ruleId":"120","severity":1,"message":"121","line":8,"column":10,"nodeType":"122","messageId":"123","endLine":8,"endColumn":14},{"ruleId":"120","severity":1,"message":"121","line":7,"column":10,"nodeType":"122","messageId":"123","endLine":7,"endColumn":14},{"ruleId":"120","severity":1,"message":"124","line":13,"column":12,"nodeType":"122","messageId":"123","endLine":13,"endColumn":30},{"ruleId":"116","severity":1,"message":"125","line":61,"column":25,"nodeType":"118","messageId":"119","endLine":61,"endColumn":27},{"ruleId":"120","severity":1,"message":"126","line":3,"column":10,"nodeType":"122","messageId":"123","endLine":3,"endColumn":19},{"ruleId":"120","severity":1,"message":"121","line":5,"column":10,"nodeType":"122","messageId":"123","endLine":5,"endColumn":14},{"ruleId":"120","severity":1,"message":"127","line":5,"column":16,"nodeType":"122","messageId":"123","endLine":5,"endColumn":19},{"ruleId":"120","severity":1,"message":"128","line":5,"column":21,"nodeType":"122","messageId":"123","endLine":5,"endColumn":24},{"ruleId":"120","severity":1,"message":"121","line":4,"column":10,"nodeType":"122","messageId":"123","endLine":4,"endColumn":14},{"ruleId":"120","severity":1,"message":"127","line":4,"column":16,"nodeType":"122","messageId":"123","endLine":4,"endColumn":19},{"ruleId":"120","severity":1,"message":"128","line":4,"column":21,"nodeType":"122","messageId":"123","endLine":4,"endColumn":24},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],["129"],["130"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unused-vars","'Grid' is defined but never used.","Identifier","unusedVar","'yearFilterSelected' is assigned a value but never used.","Expected '===' and instead saw '=='.","'propTypes' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","no-global-assign","no-unsafe-negation"]